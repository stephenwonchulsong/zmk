// This is default overlay for the Cirque Glidepoint touchpad connected via SPI.


// &pro_micro_spi {
//     status = "okay";
//     cs-gpios = <&pro_micro 19 GPIO_ACTIVE_LOW>;

//     glidepoint: glidepoint@0 {
//         compatible = "cirque,pinnacle";
//         reg = <0>;
//         spi-max-frequency = <1000000>;
//         status = "okay";
//         dr-gpios = <&pro_micro 5 (GPIO_ACTIVE_HIGH)>;

//         sensitivity = "4x";
//         sleep;
//         no-taps;
//     };
// };
// #include <dt-bindings/zmk/input_transform.h>

// / {
//     glidepoint_listener {
//         compatible = "zmk,input-listener";
//         device = <&glidepoint>;
//         input-processors = <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>;
//     };
// };
#include <dt-bindings/zmk/matrix_transform.h>

// &pinctrl {/* configuration for spi1 device, default state */
//     spi1_default: spi1_default {/* node name is arbitrary */
//         group1 {
//             /* 
//                 main role: For nice!nano, configure P0.11 as SPI clock, P0.22 as SPI MOSI, P0.08 as SPI MISO 
//                            For Xiao NRF, default pins are: P1.13 as SPI Clock, P1.15 as SPI MOSI, P1.14 as SPI MISO
//             */
//             psels = <NRF_PSEL(SPIM_SCK,  1, 13)>, // D8 (SPIM_SCK,  0, 15) between D4 & D5 would be a high speed alternate pin for the xiao plus
//                     <NRF_PSEL(SPIM_MOSI, 0, 04)>, // D4
//                     <NRF_PSEL(SPIM_MISO, 0, 05)>; // D5
//             };
//         };

//     /* configuration for spi1 device, sleep state */
//     spi1_sleep: spi1_sleep {
//         group1 {
//             /* main role: configure P0.11 as SPI clock, P0.22 as SPI MOSI, P0.08 as SPI MISO */
//             psels = <NRF_PSEL(SPIM_SCK,  1, 13)>,
//                     <NRF_PSEL(SPIM_MOSI, 0, 04)>,
//                     <NRF_PSEL(SPIM_MISO, 0, 05)>;
//             low-power-enable;
//             };
//         };
//     };
&xiao_spi {
    status = "okay";
    cs-gpios = <&gpio1 12 GPIO_ACTIVE_LOW>; // this is d7
    glidepoint: glidepoint@0 {
        compatible = "cirque,pinnacle";
        reg = <0>;
        spi-max-frequency = <1000000>;
        status = "okay";
        dr-gpios = <&gpio0 29 (GPIO_ACTIVE_HIGH)>; // this is d3
        // sensitivity = "4x";
        // sleep;
        // no-taps;
    };
};
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
// #include <behaviors/input_gestures_accel.dtsi>

// &pointer_accel {
//     input-type = <INPUT_EV_REL>;  // For relative input devices
//     track-remainders;             // Accumulate fractional movements
//     min-factor = <800>;          // 0.8x at very slow speeds
//     max-factor = <2000>;         // 3.0x at fast speeds
//     speed-threshold = <1200>;     // 1200 counts/sec for 1x
//     speed-max = <6000>;          // 6000 counts/sec for max accel
//     acceleration-exponent = <2>;  // Quadratic acceleration curve
// };

/ {
    glidepoint_listener {
        compatible = "zmk,input-listener";
        device = <&glidepoint>;
        // input-processors = <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP)>;
        input-processors = <
            &zip_xy_transform (INPUT_TRANSFORM_X_INVERT)
            &zip_xy_scaler 5 1
        >; // swap x and y, invert x and y
        // input-processors = <&zip_xy_scaler 5 2>; //2.5 faster cursor
        // input-processors = <&zip_xy_scaler 3 1>; // 3x faster cursor
        // input-processors = <&zip_xy_scaler 4 1>; // 4x faster cursor
    };
};
/ {

    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };
    
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <1>;
        rows = <1>;
        map = <RC(0,0)>;
    };
    
    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";
        row-gpios
            = <&xiao_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        col-gpios 
            = <&xiao_d 3 GPIO_ACTIVE_HIGH>
            ;
    };
};
/* 
With Acceleration (not working):
west build -d build/36cirque -p -b seeeduino_xiao_ble -- -DSHIELD=36cirque -DZMK_EXTRA_MODULES="/workspaces/zmk/app/cirque-input-module-main;/workspaces/zmk/app/zmk-pointing-acceleration-main"

Without Acceleration (working):
west build -d build/36cirque -p -b seeeduino_xiao_ble -- -DSHIELD=36cirque -DZMK_EXTRA_MODULES="/workspaces/zmk/app/cirque-input-module-main"

docker cp magical_haslett:/workspaces/zmk/app/build/36cirque/zephyr/zmk.uf2 '/Users/song100/Library/Mobile Documents/com~apple~CloudDocs/Keyboard/36firmware/36Cirque.uf2'
*/