// This is default overlay for the Cirque Glidepoint touchpad connected via SPI.

// &pro_micro_spi {
//     status = "okay";
//     cs-gpios = <&pro_micro 19 GPIO_ACTIVE_LOW>;

//     glidepoint: glidepoint@0 {
//         compatible = "cirque,pinnacle";
//         reg = <0>;
//         spi-max-frequency = <1000000>;
//         status = "okay";
//         dr-gpios = <&pro_micro 5 (GPIO_ACTIVE_HIGH)>;

//         sensitivity = "4x";
//         sleep;
//         no-taps;
//     };
// };
// #include <dt-bindings/zmk/input_transform.h>

// / {
//     glidepoint_listener {
//         compatible = "zmk,input-listener";
//         device = <&glidepoint>;
//         input-processors = <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>;
//     };
// };

&pinctrl {
    /* configuration for spi1 device, default state */
    spi1_default: spi1_default {
        /* node name is arbitrary */
        group1 {
            /* 
                main role: For nice!nano, configure P0.11 as SPI clock, P0.22 as SPI MOSI, P0.08 as SPI MISO 
                           For Xiao NRF, default pins are: P1.13 as SPI Clock, P1.15 as SPI MOSI, P1.14 as SPI MISO
            */
            psels = <NRF_PSEL(SPIM_SCK,  1, 13)>, // D8 (SPIM_SCK,  0, 15) between D4 & D5 would be a high speed alternate pin for the xiao plus
                    <NRF_PSEL(SPIM_MOSI, 0, 04)>, // D4
                    <NRF_PSEL(SPIM_MISO, 0, 05)>; // D5
        };
    };

    /* configuration for spi1 device, sleep state */
    spi1_sleep: spi1_sleep {
        group1 {
            /* main role: configure P0.11 as SPI clock, P0.22 as SPI MOSI, P0.08 as SPI MISO */
            psels = <NRF_PSEL(SPIM_SCK,  1, 13)>,
                    <NRF_PSEL(SPIM_MOSI, 0, 04)>,
                    <NRF_PSEL(SPIM_MISO, 0, 05)>;
            low-power-enable;
        };
    };

};

&xiao_spi {
    status = "okay";
    cs-gpios = <&gpio0 9 GPIO_ACTIVE_LOW>; // between D3 & D4

    glidepoint: glidepoint@0 {
        compatible = "cirque,pinnacle";
        reg = <0>;
        spi-max-frequency = <1000000>;
        status = "okay";
        dr-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH)>; // b
            // between D4 & D5

        sensitivity = "1x";
        sleep;
        // no-taps;
    };
};

/ {
    glidepoint_listener {
        compatible = "zmk,input-listener";
        device = <&glidepoint>;
    };
};

/ {
    kscan0: kscan0 {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;

        col-gpios
            = <&gpio0 02 GPIO_ACTIVE_HIGH>  // column 0
            // , <&gpio0 03 GPIO_ACTIVE_HIGH>  // column 1
            // , <&gpio0 28 GPIO_ACTIVE_HIGH>  // column 2
            // , <&gpio0 29 GPIO_ACTIVE_HIGH>  // column 3
            // , <&gpio1 11 GPIO_ACTIVE_HIGH>  // column 4
            
// I mirrored the arrangement for the future possibility of pcb's for each half being flipped

            // , <&gpio1 15 GPIO_ACTIVE_HIGH>  // column 9
            // , <&gpio1 14 GPIO_ACTIVE_HIGH>  // column 8
            // , <&gpio1 12 GPIO_ACTIVE_HIGH>  // column 7 
            // , <&gpio1 03 GPIO_ACTIVE_HIGH>  // column 6
            // , <&gpio1 05 GPIO_ACTIVE_HIGH>  // column 5
            ;             

        row-gpios
            = <&gpio1 07 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 0
            // , <&gpio0 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 1
            // , <&gpio0 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 2
            // , <&gpio1 01 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 3
            ;
    };
};
    
/*
&seeeduino_xiao_ble {
    status = "okay";
};
*/

/ {
    matrix_transform0: matrix_transform0 {
        compatible = "zmk,matrix-transform";
        columns = <1>;
        rows = <1>;
        map = <
                    RC(0,1) 
        >;
    };
};