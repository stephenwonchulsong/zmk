/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define default 0
#define lower 1
#define raise 2
#define adjust 3
#define extra 4
// #define lockhigh 8

//behaviors and timings
&mt {
    tapping-term-ms = <250>;
    flavor = "hold-preferred";
};

&lt {
    tapping-term-ms = <250>;
    flavor = "hold-preferred";
};

/ {
    macros {
        R_1W: R_1W {
            label = "R_1W";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp S>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp H &kp A &kp W &kp U &kp A &kp J &kp Y &kp D &kp S &kp N>
                ;
        };
        LR_PAR: LR_PAR {
            label = "LR_PAR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp N9 &kp N0>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp LEFT>
                ;
        };
        lmrgui: lmrgui {
            label = "LAYER_MOD";
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo extra &kp RGUI>
                , <&macro_pause_for_release>
                , <&macro_release &mo extra &kp RGUI>
                ;
        };
    };
};

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        tns: tap_number_symbols {
            compatible = "zmk,behavior-hold-tap";
            label = "NUM_SYMBOLS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };//the following two go together
        comlpar: comma_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_LPARENTH";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp LPAR>;
            mods = <(MOD_RSFT)>;
        };
        dotrpar: dot_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_RPARENTH";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp RPAR>;
            mods = <(MOD_RSFT)>;
        };//the following two go together        
        comlrpar: comma_parentheses {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_BOTHPARENTH";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&LR_PAR>;
            mods = <(MOD_RSFT)>;
        };
        dotqmark: dot_qmark {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_QMARK";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp QMARK>;
            mods = <(MOD_RSFT)>;
        };
        qtab: q_cmdandtab {
            compatible = "zmk,behavior-mod-morph";
            label = "Q_CMDANDTAB";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp LG(TAB)>;
            mods = <(MOD_LGUI)>;
        };
        tabgui: tabandgui {
            compatible = "zmk,behavior-hold-tap";
            label = "TAB_GUI";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&lmrgui>, <&kp>;
        };
   };
};


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp ESC   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp RET
   &kp LSHFT &bhm LSHFT Z &bhm LCTRL X &bhm LALT C  &bhm LGUI V  &bhm LGUI B &bhm LGUI N &bhm LALT M &comlpar &dotrpar  &bhm LSHFT FSLH  &kp RSHFT
                  &kp BSPC &lt lower DEL &tabgui 0 BSPC     &kp SPACE   &lt raise TAB  &kp ESC
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &trans       &kp LS(LC(TAB))  &trans &kp LC(TAB)      &kp LG(LS(N5))   &tns AMPS N7 &tns ASTRK N8 &tns LT N9 &kp PLUS  &kp BSPC
   &kp ESC &kp C_VOL_UP       &kp LG(LEFT)     &trans &kp LG(RIGHT)    &R_1W   &tns DLLR N4 &tns PRCNT N5 &tns CARET N6 &kp MINUS &kp EQUAL &trans
   &kp LSHFT  &bhm LSHFT C_VOL_DN &bhm LCTRL X &bhm LALT C  &bhm LGUI V  &bhm LGUI B      &tns EXCL N1 &tns AT N2    &tns POUND N3 &kp DOT &kp EQUAL &trans
                                    &trans &trans &trans                         &kp N0 &lt adjust TAB &kp CAPS
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB  &kp F1 &kp F2       &kp F3      &kp F4       &kp F5      &kp F6  &kp F7   &kp F8   &kp F9   &kp F10 &kp BSPC
   &kp ESC &trans   &trans &trans   &trans   &trans      &trans &kp LEFT &kp UP   &kp DOWN &kp RIGHT &kp RET
   &kp LSHFT &bhm LSHFT Z   &bhm LCTRL X &bhm LALT C &bhm LGUI V  &bhm LGUI B  &kp LBKT &kp RBKT &kp SQT &kp DQT &bhm LSHFT FSLH &trans
                              &trans &lt adjust DEL &trans  &trans &trans &trans
                        >;
                };
                
                adjust_layer {
                bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp AMPS &kp ASTRK &LR_PAR  &kp EQUAL &kp UNDER &kp BSPC
   &kp ESC  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR   &kp DLLR &kp PRCNT &kp CARET &kp UNDER &kp PIPE &kp RET
   &kp LSHFT &bhm LSHFT Z &bhm LCTRL X &bhm LALT C  &bhm LGUI V  &bhm LGUI B &bhm LGUI N &bhm LALT M &comlpar &dotrpar  &bhm LSHFT FSLH  &kp RSHFT
                  &kp BSPC &lt lower DEL &tabgui 0 BSPC     &kp SPACE   &lt raise TAB  &kp ESC
                  >;
        };
                extra_layer {
                bindings = <
   &kp GRAVE   &kp TAB &kp W &kp E &kp R &kp T   &kp AMPS &kp ASTRK &LR_PAR  &kp EQUAL &kp UNDER &kp BSPC
   &kp ESC  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR   &kp DLLR &kp PRCNT &kp CARET &kp UNDER &kp PIPE &kp RET
   &kp LSHFT &bhm LSHFT Z &bhm LCTRL X &bhm LALT C  &bhm LGUI V  &bhm LGUI B &bhm LGUI N &bhm LALT M &comlpar &dotrpar  &bhm LSHFT FSLH  &kp RSHFT
                  &kp BSPC &lt lower DEL &tabgui 0 BSPC     &kp SPACE   &lt raise TAB  &kp ESC
                  >;
        };
};
};

/*
west build -d build/corne_left -p -b nice_nano_v2 -- -DSHIELD=corne_left
west build -d build/corne_right -p -b nice_nano_v2 -- -DSHIELD=corne_right
*/