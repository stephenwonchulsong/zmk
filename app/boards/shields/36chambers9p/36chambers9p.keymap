/*
 * Copyright (c) 2020 The ZMK Contributors
 *;
 * SPDX-License-Identifier: MIT


west build -d build/369pleft -p -b seeeduino_xiao_ble -- -DSHIELD=36chambers9p_left -DZMK_EXTRA_MODULES="/workspaces/zmk/app/cirque-input-module-main"
west build -d build/369pright -p -b seeeduino_xiao_ble -- -DSHIELD=36chambers9p_right -DZMK_EXTRA_MODULES="/workspaces/zmk/app/cirque-input-module-main"

docker cp wizardly_wiles:/workspaces/zmk/app/build/369pleft/zephyr/zmk.uf2 "/Users/song100/Library/Mobile Documents/com~apple~CloudDocs/Keyboard/36firmware/36chambers9p_left.uf2"
docker cp wizardly_wiles:/workspaces/zmk/app/build/369pright/zephyr/zmk.uf2 "/Users/song100/Library/Mobile Documents/com~apple~CloudDocs/Keyboard/36firmware/36chambers9p_right.uf2"
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/pointing.h>

#define qwerty 0
#define colemnk 1
#define lower 2
#define raise 3
#define adjust 4
#define commandllayer 5
#define extra 6
#define mouse 7
// #define cmtoqw 6
// #define lock 7
// #define locklow 8
// #define unlock 9
// #define lockhigh 10
#define ZMK_POINTING_DEFAULT_MOVE_VAL 3500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 30

&mt {
    tapping-term-ms = <200>;
    flavor = "hold-preferred";
};

&lt {
    tapping-term-ms = <200>;
    flavor = "hold-preferred";
};


/{ // <---[[root node]]    
    macros {
        R_1W: R_1W {
            label = "R_1W";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp S>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp H &kp A &kp W &kp U &kp A &kp J &kp Y &kp D &kp S &kp N>
                ;
        };
        R_2W: R_2W {
            label = "R_2W";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <10>;
            bindings
                = <&macro_tap &kp PIPE>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp X>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp T &kp E>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp Z &kp B>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp N8>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp Y>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp R &kp D &kp C &kp SPACE>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp S &kp B &kp R>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp Z &kp U &kp 1>
                ;
        };
        textit: textit {
            label = "textit";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_tap 
                &kp LBRC &kp LEFT &kp LEFT
                &kp BSLH &kp F &kp K &kp X &kp F &kp L &kp F>
                ,<&macro_press &kp LALT>
                ,<&macro_tap &kp RIGHT &kp RIGHT>
                ,<&macro_release &kp LALT>
                ;
        };
        textbf: textbf {
            label = "textbf";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <10>;
            bindings
                = <&macro_tap 
                &kp LBRC &kp LEFT &kp LEFT
                &kp BSLH &kp F &kp K &kp X &kp F &kp B &kp E>
                ,<&macro_press 
                &kp LALT>
                ,<&macro_tap 
                &kp RIGHT &kp RIGHT>
                ,<&macro_release 
                &kp LALT>
                ;
        };
        LR_PAR: LR_PAR {
            label = "LR_PAR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp N9 &kp N0>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp LEFT>
                ;
        };
        lmrgui: lmrgui {
            label = "lmrgui";
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo commandllayer &kp RGUI>
                , <&macro_pause_for_release>
                , <&macro_release &mo commandllayer &kp RGUI>
                ;
        };
        mousecombo: mousecombo {
            label = "mousecombo";
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI &kp LSHFT> 
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp LGUI &kp LSHFT>
                , <&macro_press &mo mouse>
                , <&macro_pause_for_release>
                , <&macro_release &mo mouse>
                ;
        };
        parencite: parencite {
            label = "parencite";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp BSLH &kp R &kp A &kp S &kp K &kp J &kp C &kp L &kp F &kp K>
                , <&macro_tap &kp LBKT &kp RBKT  &kp LBRC &kp RBRC &kp LEFT &kp LEFT &kp LBKT &kp RBKT &kp RIGHT &kp RIGHT>
                ;
        };
        // \(\beta\)
        beta: beta {
            label = "beta";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings
                = <&macro_tap &kp BSLH &kp LPAR &kp BSLH &kp B &kp K &kp J &kp A &kp BSLH &kp RPAR>
                ;
        };
        // ($R^2_{adj}$
        radjsq: radjsq {
            label = "radjsq";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings
                = <&macro_tap &kp LPAR &kp DLLR>
                , <&macro_press &kp RSHFT> 
                , <&kp S>
                , <&macro_release &kp RSHFT>
                , <&kp AMPS &kp UNDER &kp LBRC &kp A &kp G &kp Y &kp RBRC &kp DLLR>
                ;
        };
        topthirds: topthirds {
            label = "topthirds";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_press &kp LCTL>
                , <&macro_press &kp LALT>
                , <&macro_press &kp LGUI>
                , <&macro_tap &kp N8 &kp F4>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LCTL>
                , <&macro_release &kp LALT>
                , <&macro_release &kp LGUI>
                ;
        };
        botthirds: botthirds {
            label = "botthirds";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_press &kp LCTL>
                , <&macro_press &kp LALT>
                , <&macro_press &kp LGUI>
                , <&macro_tap &kp N5 &kp F6>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LCTL>
                , <&macro_release &kp LALT>
                , <&macro_release &kp LGUI>
                ;
        };
        centerthirds: centerthirds {
            label = "centerthirds";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_press &kp LCTL>
                , <&macro_press &kp LALT>
                , <&macro_press &kp LGUI>
                , <&macro_tap &kp N2 &kp F5>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LCTL>
                , <&macro_release &kp LALT>
                , <&macro_release &kp LGUI>
                ;
        };
        leftthirds: leftthirds {
            label = "leftthirds";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_press &kp LCTL>
                , <&macro_press &kp LALT>
                , <&macro_press &kp LGUI>
                , <&macro_tap &kp N1 &kp M>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LCTL>
                , <&macro_release &kp LALT>
                , <&macro_release &kp LGUI>
                ;
        };
        rightthirds: rightthirds {
            label = "rightthirds";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_press &kp LCTL>
                , <&macro_press &kp LALT>
                , <&macro_press &kp LGUI>
                , <&macro_tap &kp N3 &kp M>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LCTL>
                , <&macro_release &kp LALT>
                , <&macro_release &kp LGUI>
                ;
        };
        rightminusgt: rightminusgt {
            label = "rightminusgt";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings
                = <&macro_tap &kp MINUS &kp GT>
                ;
        };
        copypastelink: copypastelink {
            label = "copypastelink";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <30>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp U &kp C &kp TAB>
                , <&macro_release &kp LGUI>
                , <&macro_press &kp LGUI>
                , <&macro_tap &kp F>
                , <&macro_wait_time 50>
                , <&macro_tap &kp V>
                , <&macro_release &kp LGUI>
                , <&macro_tap &kp RET>
                ;
        };
        ultimateback: ultimateback {
            label = "ultimateback";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <30>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp LBKT>
                , <&macro_release &kp LGUI>
                , <&macro_tap &kp K_BACK>
                ;
        };
    };
    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_RGUI|MOD_LSFT|MOD_LALT|MOD_LCTL)>;
        };
        mnl: mouse_n_language {
            compatible = "zmk,behavior-hold-tap";
            label = "MOUSE_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        tns: tap_number_symbols {
            compatible = "zmk,behavior-hold-tap";
            label = "NUM_SYMBOLS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };//the following two go together
        comlpar: comma_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_LPARENTH";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp LPAR>;
            mods = <(MOD_RSFT)>;
        };
        dotrpar: dot_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_RPARENTH";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp RPAR>;
            mods = <(MOD_RSFT)>;
        };//the following two go together        
        comlrpar: comma_parentheses {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_BOTHPARENTH";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&LR_PAR>;
            mods = <(MOD_RSFT)>;
        };
        dotqmark: dot_qmark {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_QMARK";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp QMARK>;
            mods = <(MOD_RSFT)>;
        };
        qtab: q_cmdandtab {
            compatible = "zmk,behavior-mod-morph";
            label = "Q_CMDANDTAB";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp LG(TAB)>;
            mods = <(MOD_LGUI)>;
        };
        tabgui: tabandgui {
            compatible = "zmk,behavior-hold-tap";
            label = "TAB_GUI";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&lmrgui>, <&kp>;
        };
        dmousecombo: dmousecombo {
            compatible = "zmk,behavior-hold-tap";
            label = "D_MCOMBO";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&mousecombo>, <&kp>;
        };
        copypaste: copypaste {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LG(C)>, <&kp LG(V)>, <&kp LG(V)>;
        };
        // td_mt_bspc: tap_dance_layer_tap {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <150>;
        //     bindings = <&lt lower BSPC>, <&kp BSPC>;
        // };
        // td_mtt_spc: tap_dance_layer_tap {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <150>;
        //     bindings = <&mt LSHFT SPACE>, <&kp SPACE>;
        // };
        qlt: quick_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };
        qmt: quick_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
        wintop: window_top {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LC(LA(UP))>, <&kp BSPC>;
        };
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
	        compatible = "zmk,behavior-sensor-rotate";
	        #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <20>;
        };
        scroll_l_r: behavior_sensor_rotate_mouse_wheel_left_right {
	        compatible = "zmk,behavior-sensor-rotate";
	        #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;
            tap-ms = <20>;
        };
        homef12: homef12 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&ultimateback>, <&kp F12>;
        };
        lefttop: lefttop {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LA(LG(PG_UP)))>, <&kp LS(LC(LA(LG(N7))))>;
        };
        righttop: righttop {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LA(LG(HOME)))>, <&kp LS(LC(LA(LG(N9))))>;
        };
        leftbot: leftbot {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LA(LG(PG_DN)))>, <&kp LS(LC(LA(LG(N4))))>;
        };
        rightbot: rightbot {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LA(LG(END)))>, <&kp LS(LC(LA(LG(N6))))>;
        };
        toptop: toptop {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LA(UP))>, <&topthirds>, <&kp LS(LC(LA(LG(F7))))>;
        };
        botbot: botbot {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LA(DOWN))>, <&botthirds>, <&kp LS(LC(LA(LG(F9))))>;
        };
        leftleft: leftleft {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LA(LEFT))>, <&kp LS(LC(LA(LG(N1))))>,  <&kp LS(LC(LA(LG(F1))))>;
        };
        rightright: rightright {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LA(RIGHT))>, <&kp LS(LC(LA(LG(N3))))>, <&kp LS(LC(LA(LG(F2))))>;
        };
        centercenter: centercenter {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LA(RET))>, <&centerthirds>, <&kp LS(LC(LA(LG(F3))))>;
        };
        R1WR2W: R1WR2W {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&R_1W>, <&R_1W>, <&R_2W>;
        };
        arcwindow: arcwindow {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LG(W)>, <&kp LS(LG(W))>;
        };
        toggleForkLift: toggleForkLift {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LG(1))>, <&kp LC(LG(5))>, <&kp LC(LG(6))>;//name, modified, size
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_SCROLLUP {
            timeout-ms = <50>;
            key-positions = <3 13>;
            bindings = <&msc SCRL_UP>;
        };
        combo_SCROLLDN {
            timeout-ms = <50>;
            key-positions = <13 23>;
            bindings = <&msc SCRL_DOWN>;
        };
        combo_BACK {
            timeout-ms = <50>;
            key-positions = <10 20>;
            bindings = <&kp LG(LBKT)>;
        };
    };
};
/{
    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <    
    &homef12       &kp W        &kp E        &kp R        &kp T       &kp Y       &kp U       &kp I       &kp O     &kp F12
    &kp Q          &kp S        &dmousecombo 0 D  &mnl extra F  &kp G       &bhm LGUI H       &bhm LGUI J       &bhm LALT K       &bhm LCTL L    &bhm LSHFT P
    &kp A          &bhm LCTRL X &bhm LALT C  &bhm LGUI V  &bhm LGUI B &kp N &bhm LALT M &comlpar    &dotrpar  &tns COLON SEMI
    &bhm LSHFT Z   &mkp MB1     &mkp MB1     &qlt lower BSPC &tabgui 0 RET &tns RSHFT SPACE   &lt raise TAB  &kp F18 &mkp MB1 &mt RSHFT FSLH
    &mkp MB1 &mkp MB1 &mkp MB1 &mkp MB1 &mkp MB1
                >;
            sensor-bindings = <&inc_dec_kp X Y &inc_dec_kp J K>;
            // sensor-bindings = <&inc_dec_kp J K>;
        };
        colemak_layer {
            bindings = <
    &homef12        &kp W        &kp F        &kp P       &kp G       &kp J       &kp L       &kp U       &kp Y  &kp F12
    &kp Q          &kp R        &dmousecombo 0 S        &mnl extra T       &kp D       &kp H       &kp N       &kp E       &kp I    &kp SEMI
    &kp A          &bhm LCTRL X        &bhm LALT C        &bhm LGUI V       &bhm LGUI B       &kp K       &kp M  &comlpar    &dotrpar  &kp O      
    &bhm LSHFT Z   &mkp MB1     &mkp MB1     &qlt lower BSPC &tabgui 0 RET &tns RSHFT SPACE   &lt raise TAB  &kp F18 &mkp MB2 &mt RSHFT FSLH
    &mkp MB1 &mkp MB1 &mkp MB1 &mkp MB1 &mkp MB1
                 >;
            sensor-bindings = <&inc_dec_kp X Y &inc_dec_kp J K>;
        };
        lower_layer {
            bindings = <
    &copypastelink     &lefttop  &toptop       &righttop   &kp LG(LS(N5))   &tns AMPS N7 &tns ASTRK N8 &tns LT N9 &kp PLUS &to 0 
    &kp LG(LBKT) &leftleft &centercenter &rightright &R1WR2W            &tns DLLR N4 &tns PRCNT N5 &tns CARET N6 &kp MINUS &kp EQUAL
    &kp C_VOL_UP &leftbot  &botbot       &rightbot   &bhm LGUI B      &tns EXCL N1 &tns AT N2    &tns POUND N3 &kp DOT &kp EQUAL
    &kp C_VOL_DN &mkp MB1 &mkp MB2     &qlt lower BSPC &tabgui 0 RET &tns RPAR N0   &lt adjust TAB  &kp F18 &mkp MB2 &mt RSHFT FSLH
    &trans     &trans       &trans     &trans       &trans
                >;
            sensor-bindings = <&inc_dec_kp X Y &inc_dec_kp J K>;
        };
        raise_layer {
            bindings = <
    &mkp MB2       &kp F2       &kp F3      &kp F4       &kp F5      &kp F6  &kp F7   &kp F8   &kp F9   &to 1
    &kp F1       &kp LCTL        &kp LALT       &kp LGUI        &none       &toggleForkLift   &kp LEFT &kp UP   &kp DOWN &kp RET
    &kp LSHFT &bhm LCTRL X &bhm LALT C &bhm LGUI V  &bhm LGUI B  &tns LBRC LBKT &tns RBRC RBKT &kp SQT &kp DQT &kp RIGHT
    &bhm LSHFT Z    &trans     &trans       &qlt adjust DEL &trans  &tns RSHFT SPACE &lt raise TAB &trans      &trans               &mt RSHFT BSLH
    &trans     &trans       &trans     &trans       &trans
                >;
            sensor-bindings = <&inc_dec_kp X Y &inc_dec_kp J K>;
        };
        adjust_layer {
            bindings = <
    &none &none        &none        &out OUT_TOG        &bt BT_CLR_ALL     &kp AMPS &kp ASTRK &LR_PAR  &kp EQUAL &bootloader
    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 3 &bt BT_SEL 3 &bt BT_CLR   &kp DLLR &kp PRCNT &kp CARET &kp UNDER &kp PIPE
    &bhm LSHFT C_VOL_UP &bhm LCTRL X &bhm LALT C  &bhm LGUI V  &bhm LGUI B &kp EXCL &kp AT    &kp POUND &none &kp BSLH
    &bhm LSHFT C_VOL_DN  &trans  &trans        &qlt adjust DEL &trans   &kp RPAR &lt adjust TAB &trans &trans &mt RSHFT BSLH
    &trans     &trans       &trans     &trans       &trans
                >;
            sensor-bindings = <&inc_dec_kp X Y &inc_dec_kp J K>;
        };
        commandllayer_layer {
            bindings = <
    &kp GRAVE        &arcwindow        &kp E        &bhm LSHFT R        &kp T       &kp Y       &kp U       &kp I    &kp O    &kp TILDE
    &kp TAB      &kp S        &kp D        &kp F        &kp G       &kp H       &kp J       &kp K    &kp L    &kp RET
    &bhm LSHFT A   &bhm LCTRL X &bhm LALT C  &bhm LGUI V  &bhm LGUI B &kp N &bhm LALT M &comlpar &dotrpar &kp SEMI
    &bhm LSHFT Z    &trans      &mkp MB1       &qlt lower DEL &kp RET     &kp SPACE   &lt raise TAB  &kp ESC &trans &mt RSHFT FSLH
    &trans     &trans       &trans     &trans       &trans
                >;
            sensor-bindings = <&scroll_up_down>;
        };
        extra_layer {
            bindings = <
    &kp ESC        &kp W        &kp E        &kp R        &kp T       &kp AMPS    &kp U       &kp I           &kp O     &kp RET
    &kp Q          &bhm LGUI S        &mt mouse LG(LS(SPACE))  &mo extra     &kp G       &kp PG_DN     &kp F18       &kp K           &textit    &bhm LSHFT P 
    &kp LC(LEFT)   &bhm LCTRL X &copypaste  &bhm LGUI V  &textbf &kp LBRC &kp RBRC &kp GRAVE &kp SQT  &rightminusgt      
    &parencite    &trans   &mkp MB2       &qlt lower DEL &kp LS(LC(LA(LG(RET))))     &kp LS(LC(LA(LG(SPACE))))   &kp LS(LC(LA(LG(TAB))))   &kp CAPS   &trans      &mt RSHFT BSLH
    &trans     &trans       &trans     &trans       &trans
                >;
            sensor-bindings = <&inc_dec_kp X Y &inc_dec_kp J K>;
        };
        mouse_layer {bindings = <
    &mkp MB1 &kp LG(LA(LEFT)) &mkp MB4  &kp LG(LA(RIGHT))  &kp T       &msc SCRL_UP   &msc SCRL_LEFT &mmv MOVE_UP   &msc SCRL_RIGHT    &kp HOME
    &kp LG(LEFT)    &mkp MB2 &mo mouse  &mkp MB1 &kp LG(RIGHT)      &msc SCRL_DOWN &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT    &bhm LCTL P
    &msc SCRL_UP   &bhm LCTRL X     &bhm LALT C  &bhm LGUI V  &bhm LGUI B &kp LBRC &kp RBRC &kp GRAVE &kp SQT  &mnl mouse SEMI      
    &msc SCRL_DOWN   &trans    &trans         &qlt lower BSPC &kp RET     &mkp MB1   &mkp MB2   &kp CAPS     &trans    &mt RSHFT BSLH
    &trans     &trans       &trans     &trans       &trans
                >;
            sensor-bindings = <&inc_dec_kp X Y &inc_dec_kp J K>;
        };
    };
};