/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
/*
CS(SS) pin is D16 P0.31
Encoder A and B for Right1 are D14 and D15, P0.09 and P0.10
Encoder A and B for Right2 are D11 and D12, P0.15 and P0.19
DR is D13, P1.01
SDA D4
SCL D5
MISO D18 P1.05
MOSI D19 P1.07
SCK  D17 P1.03 
*/
// Encoders
/{
    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <
        /* &left_encoder*/
        &right_encoder
        >;
        triggers-per-rotation = <20>;
    };
    left_encoder: encoder_left {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };
    right_encoder: encoder_right {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };
};

/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <11>;
		rows = <5>;
// | SW1  | SW2  | SW3  | SW4  | SW5  |   | SW5  | SW4  | SW3  | SW2  | SW1  |
// | SW6  | SW7  | SW8  | SW9  | SW10 |   | SW10 | SW9  | SW8  | SW7  | SW6  |
// | SW11 | SW12 | SW13 | SW14 | SW15 |   | SW15 | SW14 | SW13 | SW12 | SW11 |
// | SW16 |      |      | SW17 | SW18 |   | SW19 | SW19 | SW18 |      | SW16 |
// | U3A  | U3CT | U3C  | U3B  | U3D  |   | SW24 | SW23 | SW22 | SW21 | SW20 |
		map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) 		 	RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) 		 	RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) 		 	RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10)
RC(3,0)         RC(3,2) RC(3,3) RC(3,4) 		 	RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10)
RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5)
		>;
	};  
};